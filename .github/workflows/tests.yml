name: Tests

on:
  push:
    branches:
    - add-tests-for-osx
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pytest:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # max-parallel: 6
      matrix:
        os: [ubuntu-20.04, macOS-10.15] # , windows-2019]
        python-version:  [3.5, 3.6, 3.7, 3.8]

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 35

    steps:
    - uses: actions/checkout@v2
      with:
          submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set environment variables
      uses: allenevans/set-env@v1.0.0
      with:
        PIPENV_DEFAULT_PYTHON_VERSION: ${{ matrix.python-version }}
    - name: Setup Bazel
      uses: abhinavsingh/setup-bazel@v3
    - name: Build PyDP with coverage
    # removed coverage for now
      run: |
        bazel build src/python:bindings_test --verbose_failures    
    - name: Copy binary to python package(windows)  
      if: runner.os == 'Windows'
      run: |
        copy bazel-bin\src\bindings\_pydp.so pydp\_pydp.pyd
    - name: Copy binary to python package   
      if: runner.os != 'Windows'
      run: |
        cp -f ./bazel-bin/src/bindings/_pydp.so ./pydp  
          
    - name: Setup and Install PyDP
      run: |
        python -m pip install pipenv
        pipenv install --dev --skip-lock --pre
        pipenv run python setup.py bdist_wheel
        pipenv run python -m pip install --force-reinstall dist/*.whl
    - name: Run tests
      run: |
        pipenv run coverage run -m pytest tests
    - name: Check Python code coverage
      if: runner.os == 'Linux' # Coverage will be the same on all systems so only running the check on Linux
      run: |
        make check-coverage-python
      env:
        MIN_COVERAGE: 80
    - name: Check C++ code coverage
      if: runner.os == 'Linux' # Coverage will be the same on all systems so only running the check on Linux
      run: |
        make check-coverage-cpp
